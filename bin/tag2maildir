#! /usr/bin/env ruby
#
# @abstract Find all mail downloaded by gmvault from any given GMail account
#   and create a maildir mailbox
#
# @author Ollivier Robert <roberto@keltia.net>
#
# Read all .eml with a given tag in .meta. Generate a maildir structure
# with all .eml.
#
# @version $Id: tag2maildir,v 068c72c4846f 2012/09/07 14:18:02 roberto $

# VCS ID
MYNAME = File.basename($0)
VCS_ID = "$Id: tag2maildir,v 068c72c4846f 2012/09/07 14:18:02 roberto $"

require "date"
require "time"
require "json"
require "optparse"

# Non standard packages
#
require "mail"
require "maildir"

# Default config
#
MYBASE = ENV["HOME"] + "/Maildir"

class DataError < Exception; end

require "gmail/tag"
require "gmail/gmvault"

# Starting point
#
def main(argv)
  my_tag = nil
  my_base = MYBASE

  usage = <<-"EOTEXT"
Usage: #{MYNAME} [-h] -b DIR -t TAG DIR
  EOTEXT

  banner = <<-"EOTEXT"
#{MYNAME}
Revision #{VCS_ID}

#{usage}
  EOTEXT

  argv.options do |opts|
    opts.banner = banner
    opts.on("-b", "--base=DIR", "Use this directory to create mailboxes") do
      |opt_base|
      my_base = opt_base
    end
    opts.on("-d", "--debug", "Don't post directly - DEBUG mode") do
      $debug = true
    end
    opts.on("-t", "--tag=TAG", "Use the following TAG ") do
      |opt_tag|
      my_tag = opt_tag
    end
    opts.on("-h", "Help", "Display this usage") do
      puts banner
      return 255
    end
    opts.parse!
  end

  argv.options = nil
  top_dir = argv.shift

  if top_dir.nil? then
    $stderr.puts("Error: directory where to load mail from must be specified")
    return(1)
  end

  if my_tag.nil? then
    $stderr.puts("Error: the -t TAG option must be specified")
    return(1)
  end

  Dir.chdir(top_dir) do

    tag = Tag.new(my_tag)
    maildir = Maildir.new(my_base + "/#{tag.normalize}")
    maildir.serializer = Maildir::Serializer::Mail.new

    Dir["**/*.meta"].each do |m|
      $stderr.puts(m)
      mail = GMail.new(m).load(tag)
      if mail.nil?
        maildir.add(mail)
        puts("T")
      else
        puts(".")
      end
    end
    puts("Total message in #{tag.normalize}: #{mail.list.length}...")
  end

  return 0
end # -- main

exit(main(ARGV) || 1)
